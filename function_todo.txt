# OpenAIのUsageを見ると、下記の10個（1〜10）のAPIで集計しているので、
# 内部的には現在は、この10個のAPIの区分がプリミティブに近いかと推測する。
# https://platform.openai.com/settings/organization/usage
"""
(1) chat_completions
(2) images
(3) web_searches
(4) file_searches
(5) moderations
(6) embeddings
(7) audio_speeches
(8) audio_transcriptions
(9) vector_stores
(10) code_interpreter_sessions
(12) agents
"""

instructionsとメッセージロールでの指定方法の比較表
項目	            instructions 引数	        inputのrole, contentによる指定
指示レベル	    高レベル、明確な振る舞いの指示	メッセージ形式での会話的な文脈提供
適用範囲	        単一のAPIリクエストにのみ適用	会話の履歴として複数のリクエスト間で継続的
優先度	        inputよりも明確に高い	        instructionsほど明確な優先度はない
ユースケース	    一時的、または単発的な制御	    継続的で対話的なコンテキストの提供

指定方法の柔軟性	単一の指示文でシンプルな指定	複数の役割を用いた複雑な指定が可能
"""
input=[
    {"role": "developer", "content": "Respond concisely and professionally."},
    {"role": "user", "content": "What is Python?"},
    {"role": "assistant", "content": "Python is a programming language."},
    {"role": "user", "content": "How is it used in AI?"}
]
"""

結論と使い分けポイント
一時的な指示、明確な優先順位が欲しい場合は instructions を使用。

複数ターンの会話や文脈を活かして、継続的に同じ指示を与えたい場合は、 inputでrole="developer" を使用します。

